{"version":3,"file":"bundle.js","sources":["../src/help.ts","../src/canvas.ts"],"sourcesContent":["export const getMargin = (i: string) => {\n    // 判断一个字的左右可堆积margin于优先级\n};\n","import { getMargin } from './help';\n\nenum type {\n    canvas = 'canvas',\n    dom = 'dom',\n}\n\ninterface textConfig {\n    text: string;\n    width: string;\n    fontSize: string;\n    fontFamily: string;\n    lineHeight?: string | number;\n    color: string;\n    padding: string;\n    type: type;\n}\nlet inputDiv: HTMLDivElement;\n\nconst getLength = (str: string) => {\n    inputDiv.innerHTML = <string>new String(str.replace(/[ ]/g, '&nbsp;'));\n    return inputDiv.getBoundingClientRect().width;\n};\n\nexport default class Canvas {\n    config: textConfig;\n    canvas: HTMLCanvasElement;\n    ctx: CanvasRenderingContext2D;\n    dom: HTMLDivElement;\n    body: HTMLElement;\n    rate: number;\n\n    constructor(config: textConfig) {\n        this.config = config;\n        this.body = document.body;\n        this.rate = window.devicePixelRatio;\n\n        if (this.config.type === 'canvas') {\n            this.canvasInit();\n            this.init();\n            // this.testCaseInit();\n        } else {\n            this.domInit();\n            // this.testDomInit();\n        }\n    }\n\n    testCaseInit() {\n        const div = document.createElement('div');\n        const canvasWrap = document.createElement('div');\n        div.innerText = this.config.text;\n        div.style.width = this.config.width;\n        div.style.fontSize = this.config.fontSize;\n        div.style.fontFamily = this.config.fontFamily;\n        div.style.padding = this.config.padding;\n        div.style.color = this.config.color;\n        div.style.border = '1px solid black';\n        div.style.textAlign = 'left';\n\n        canvasWrap.style.width = this.config.width;\n        canvasWrap.style.border = '1px solid black';\n        canvasWrap.style.margin = '20px 0 0 0';\n        canvasWrap.style.textAlign = 'center';\n        canvasWrap.style.fontSize = '0';\n\n        canvasWrap.appendChild(this.canvas);\n        this.body.appendChild(div);\n        this.body.appendChild(canvasWrap);\n    }\n\n    testDomInit() {\n        const div = document.createElement('div');\n        div.style.width = this.config.width;\n        div.style.padding = this.config.padding;\n        div.style.color = this.config.color;\n        div.style.border = '1px solid black';\n        div.style.textAlign = 'center';\n        div.style.margin = '20px 0 0 0';\n        div.appendChild(this.dom);\n\n        this.body.appendChild(div);\n    }\n\n    canvasInit() {\n        this.canvas = document.createElement('canvas');\n        this.ctx = this.canvas.getContext('2d');\n        const size = this.init();\n        this.canvas.width = size.width * this.rate;\n        this.canvas.height = size.height * this.rate;\n        this.canvas.style.width = size.width + 'px';\n        this.canvas.style.height = size.height + 'px';\n    }\n\n    domInit() {\n        if (!inputDiv) {\n            inputDiv = <HTMLDivElement>document.createElement('div');\n            inputDiv.style.position = 'absolute';\n            inputDiv.style.display = 'inline-block';\n            inputDiv.style.visibility = 'hidden';\n            inputDiv.style.fontSize = this.config.fontSize;\n            inputDiv.style.fontFamily = this.config.fontFamily;\n            document.body.appendChild(inputDiv);\n        }\n        const startX = parseInt(this.config.padding, 10);\n        const startY = startX;\n        const endX = parseInt(this.config.width, 10) - startX;\n        let beginX = startX;\n        let beginY = startY;\n        let maxWidth = 0;\n        for (const i of this.config.text) {\n            const width = getLength(i);\n            const eX = beginX + width;\n            if (eX > endX) {\n                if (beginX > maxWidth) {\n                    maxWidth = beginX;\n                }\n                beginX = startX + width;\n            } else {\n                beginX = eX;\n            }\n        }\n\n        this.dom = document.createElement('div');\n        this.dom.style.width = maxWidth + 'px';\n        this.dom.innerText = this.config.text;\n        this.dom.style.display = 'inline-block';\n        this.dom.style.fontSize = this.config.fontSize;\n        this.dom.style.fontFamily = this.config.fontFamily;\n        this.dom.style.textAlign = 'left';\n        this.dom.style.color = this.config.color;\n    }\n\n    init() {\n        // 暂定4边padding等宽\n        const startX = parseInt(this.config.padding, 10);\n        const startY = startX;\n        const endX = parseInt(this.config.width, 10) - startX;\n        const getWidth = (val: string) => {\n            this.ctx.save();\n            this.ctx.font = `${this.config.fontSize} ${this.config.fontFamily}`;\n            const height = this.ctx.measureText(val).width;\n            this.ctx.restore();\n            return height;\n        };\n        const getLineHeight = () => {\n            const height = getWidth('w');\n            if (!this.config.lineHeight) {\n                // 不存在\n                return 1.5 * height;\n            }\n            if (typeof this.config.lineHeight === 'number') {\n                return this.config.lineHeight * height;\n            }\n            return parseInt(this.config.lineHeight, 10);\n        };\n        const lineHeight = getLineHeight();\n\n        let beginX = startX;\n        // let beginY = startY + lineHeight;\n        let beginY = startY;\n        const size = parseInt(this.config.fontSize, 10) * this.rate + 'px';\n        this.ctx.save();\n        this.ctx.fillStyle = this.config.color;\n        this.ctx.font = `${size} ${this.config.fontFamily}`;\n        this.ctx.textBaseline = 'top';\n        let maxWidth = 0;\n        for (const i of this.config.text) {\n            const width = getWidth(i);\n            const eX = beginX + width;\n            const margin = getMargin(i);\n            if (eX > endX) {\n                // console.log(beginX);\n                if (beginX > maxWidth) {\n                    maxWidth = beginX;\n                }\n                beginX = startX;\n                beginY += lineHeight;\n                this.ctx.fillText(i, beginX * this.rate, beginY * this.rate);\n                beginX += width;\n            } else {\n                this.ctx.fillText(i, beginX * this.rate, beginY * this.rate);\n                beginX = eX;\n            }\n        }\n        this.ctx.restore();\n\n        return {\n            width: maxWidth,\n            height: beginY + startY + lineHeight,\n        };\n    }\n}\n"],"names":["getMargin","i","type","inputDiv","getLength","str","innerHTML","String","replace","getBoundingClientRect","width","config","body","document","rate","window","devicePixelRatio","canvasInit","init","domInit","div","createElement","canvasWrap","innerText","text","style","fontSize","fontFamily","padding","color","border","textAlign","margin","appendChild","canvas","dom","ctx","getContext","size","height","position","display","visibility","startX","parseInt","startY","endX","beginX","beginY","maxWidth","_a","_i","eX","getWidth","val","save","font","_this","measureText","restore","getLineHeight","lineHeight","fillStyle","textBaseline","fillText"],"mappings":"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"}